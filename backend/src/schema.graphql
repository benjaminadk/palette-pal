# import * from './generated/prisma.graphql'

type Query {
  currentUser: User
  palettes(where: PaletteWhereInput, orderBy: PaletteOrderByInput, skip: Int, first: Int): [Palette]
  palettesConnection(
    where: PaletteWhereInput
    orderBy: PaletteOrderByInput
    skip: Int
    first: Int
  ): PaletteConnection
}

type Mutation {
  signup(agree: Boolean!, name: String!, email: String!, password: String!): UserPayload
  signin(email: String!, password: String!): UserPayload
  signout: BasicPayload
  sendForgotPasswordEmail(email: String!): BasicPayload
  forgotPasswordChange(newPassword: String!, key: String!): BasicPayload
}

interface Payload {
  success: Boolean!
  message: String!
}

type BasicPayload implements Payload {
  success: Boolean!
  message: String!
}

type UserPayload implements Payload {
  success: Boolean!
  message: String!
  user: User
}
